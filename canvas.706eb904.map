{"version":3,"sources":["src/canvas.js"],"names":["nextUp","$","document","ready","windowWidth","window","innerWidth","windowHeight","innerHeight","container","querySelector","scrollHeight","canvas","getElementById","w","width","h","height","ctx","getContext","tileSize","generateDiagonals","clearRect","y","x","leftToRight","Math","random","xOffset","yOffset","beginPath","strokeStyle","floor","moveTo","lineTo","stroke","generateOverlapDiagonals","generateHorVertLines","vertical","drawNextUp","console","log","maybeNext","on","resize","min","max"],"mappings":"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","file":"canvas.706eb904.map","sourceRoot":"..","sourcesContent":["let nextUp = 2;\n\n$(document).ready(function() {\n\n  // canvas\n  let windowWidth = window.innerWidth;\n  let windowHeight = window.innerHeight;\n  const container = document.querySelector('.container');\n  let scrollHeight = container.scrollHeight;\n\n  const canvas = document.getElementById('myCanvas');\n  let w = canvas.width = windowWidth;\n  let h = canvas.height = scrollHeight;\n\n  const ctx = canvas.getContext('2d');\n  const tileSize = 30;\n\n  function generateDiagonals(ctx, tileSize, w, h) {\n    ctx.clearRect(0, 0, w, h);\n    for (let y = 0; y <= (h / tileSize); y++) {\n      for (let x = 0; x <= (w / tileSize); x++) {\n        const leftToRight = Math.random() >= .5;\n        const xOffset = x * tileSize;\n        const yOffset = y * tileSize;\n        ctx.beginPath();\n        ctx.strokeStyle = `rgb(${Math.floor(255 - ((y + 1) * 2))}, 100, ${Math.floor(255 - ((x + 1) * 15))})`;\n        if (leftToRight) {\n          // draw  left to right line = \\\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset + tileSize, yOffset + tileSize);\n        } else {\n          // draw  right to left line = /\n          ctx.moveTo(xOffset + tileSize, yOffset);\n          ctx.lineTo(xOffset, yOffset + tileSize);\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  function generateOverlapDiagonals(ctx, tileSize, w, h) {\n    ctx.clearRect(0, 0, w, h);\n    for (let y = 0; y <= (h / tileSize); y++) {\n      for (let x = 0; x <= (w / tileSize); x++) {\n        const leftToRight = Math.random() >= .5;\n        const xOffset = x * tileSize;\n        const yOffset = y * tileSize;\n        ctx.beginPath();\n        ctx.strokeStyle = `rgb(${Math.floor(255 - (y * 4))}, 150, ${Math.floor(255 - (x * 20))})`;\n        if (leftToRight) {\n          // draw  left to right line = \\\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset + tileSize, yOffset + tileSize);\n        } else {\n          // draw  right to left line = /\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset - tileSize, yOffset + tileSize);\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  function generateHorVertLines(ctx, tileSize, w, h) {\n    ctx.clearRect(0, 0, w, h);\n    for (let y = 0; y <= (h / tileSize); y++) {\n      for (let x = 0; x <= (w / tileSize); x++) {\n        const vertical = Math.random() >= .5;\n        const xOffset = x * tileSize;\n        const yOffset = y * tileSize;\n        ctx.beginPath();\n        ctx.strokeStyle = `rgb(${Math.floor(255 - ((x + 1) * 5))}, ${Math.floor(255 - ((y + 1) * 5))}, 0)`;\n        if (vertical) {\n          // draw vertical line = |\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset, yOffset + tileSize);\n        } else {\n          // draw horizontal line = --\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset + tileSize, yOffset);\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  // generate pattern initially & on refresh\n  generateOverlapDiagonals(ctx, tileSize, w, h);\n\n  // define function for which pattern to draw next\n  function drawNextUp() {\n    console.log(`nextUp before running maybeNext:`, nextUp);\n    if (nextUp === 1) {\n      generateOverlapDiagonals(ctx, tileSize, w, h);\n      // nextUp = 'b';\n    } else if (nextUp === 2) {\n      generateHorVertLines(ctx, tileSize, w, h);\n      // nextUp = 'c';\n    } else if (nextUp === 3) {\n      generateDiagonals(ctx, tileSize, w, h);\n    }\n\n    let maybeNext = random(1,3);\n    while (maybeNext === nextUp) {\n      maybeNext = random(1,3);\n    }\n    nextUp = maybeNext;\n  };\n\n  // do it againnnnnn on each click, alternating\n  $('body, a').on('click', function(){\n    drawNextUp();\n  });\n\n  $(window).resize(function() {\n    windowWidth = window.innerWidth;\n    scrollHeight = container.scrollHeight;\n    w = canvas.width = windowWidth;\n    h = canvas.height = scrollHeight;\n    generateHorVertLines(ctx, tileSize, w, h);\n    nextUp = 3;\n  });\n\n}); // end of doc ready\n\nconst random = function(min,max) {\n  // getting a random integer:\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n"]}