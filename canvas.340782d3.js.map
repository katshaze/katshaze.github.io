{"version":3,"sources":["src/canvas.js"],"names":["nextUp","$","document","ready","windowWidth","window","innerWidth","windowHeight","innerHeight","container","querySelector","scrollHeight","canvas","getElementById","w","width","h","height","ctx","getContext","tileSize","generateDiagonals","clearRect","y","x","leftToRight","Math","random","xOffset","yOffset","beginPath","strokeStyle","floor","moveTo","lineTo","stroke","generateOverlapDiagonals","generateHorVertLines","vertical","drawNextUp","maybeNext","on","resize","min","max"],"mappings":"AAAA,IAAIA,MAAM,GAAG,CAAb;AAEAC,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAW;AAE3B;AACA,MAAIC,WAAW,GAAGC,MAAM,CAACC,UAAzB;AACA,MAAIC,YAAY,GAAGF,MAAM,CAACG,WAA1B;AACA,MAAMC,SAAS,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,YAAvB,CAAlB;AACA,MAAIC,YAAY,GAAGF,SAAS,CAACE,YAA7B;AAEA,MAAMC,MAAM,GAAGV,QAAQ,CAACW,cAAT,CAAwB,UAAxB,CAAf;AACA,MAAIC,CAAC,GAAGF,MAAM,CAACG,KAAP,GAAeX,WAAvB;AACA,MAAIY,CAAC,GAAGJ,MAAM,CAACK,MAAP,GAAgBN,YAAxB;AAEA,MAAMO,GAAG,GAAGN,MAAM,CAACO,UAAP,CAAkB,IAAlB,CAAZ;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,WAASC,iBAAT,CAA2BH,GAA3B,EAAgCE,QAAhC,EAA0CN,CAA1C,EAA6CE,CAA7C,EAAgD;AAC9CE,IAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBR,CAApB,EAAuBE,CAAvB;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKP,CAAC,GAAGI,QAA1B,EAAqCG,CAAC,EAAtC,EAA0C;AACxC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKV,CAAC,GAAGM,QAA1B,EAAqCI,CAAC,EAAtC,EAA0C;AACxC,YAAMC,WAAW,GAAGC,IAAI,CAACC,MAAL,MAAiB,EAArC;AACA,YAAMC,OAAO,GAAGJ,CAAC,GAAGJ,QAApB;AACA,YAAMS,OAAO,GAAGN,CAAC,GAAGH,QAApB;AACAF,QAAAA,GAAG,CAACY,SAAJ;AACAZ,QAAAA,GAAG,CAACa,WAAJ,iBAAyBL,IAAI,CAACM,KAAL,CAAW,MAAO,CAACT,CAAC,GAAG,CAAL,IAAU,CAA5B,CAAzB,oBAAkEG,IAAI,CAACM,KAAL,CAAW,MAAO,CAACR,CAAC,GAAG,CAAL,IAAU,EAA5B,CAAlE;;AACA,YAAIC,WAAJ,EAAiB;AACf;AACAP,UAAAA,GAAG,CAACe,MAAJ,CAAWL,OAAX,EAAoBC,OAApB;AACAX,UAAAA,GAAG,CAACgB,MAAJ,CAAWN,OAAO,GAAGR,QAArB,EAA+BS,OAAO,GAAGT,QAAzC;AACD,SAJD,MAIO;AACL;AACAF,UAAAA,GAAG,CAACe,MAAJ,CAAWL,OAAO,GAAGR,QAArB,EAA+BS,OAA/B;AACAX,UAAAA,GAAG,CAACgB,MAAJ,CAAWN,OAAX,EAAoBC,OAAO,GAAGT,QAA9B;AACD;;AACDF,QAAAA,GAAG,CAACiB,MAAJ;AACD;AACF;AACF;;AAAA;;AAED,WAASC,wBAAT,CAAkClB,GAAlC,EAAuCE,QAAvC,EAAiDN,CAAjD,EAAoDE,CAApD,EAAuD;AACrDE,IAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBR,CAApB,EAAuBE,CAAvB;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKP,CAAC,GAAGI,QAA1B,EAAqCG,CAAC,EAAtC,EAA0C;AACxC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKV,CAAC,GAAGM,QAA1B,EAAqCI,CAAC,EAAtC,EAA0C;AACxC,YAAMC,WAAW,GAAGC,IAAI,CAACC,MAAL,MAAiB,EAArC;AACA,YAAMC,OAAO,GAAGJ,CAAC,GAAGJ,QAApB;AACA,YAAMS,OAAO,GAAGN,CAAC,GAAGH,QAApB;AACAF,QAAAA,GAAG,CAACY,SAAJ;AACAZ,QAAAA,GAAG,CAACa,WAAJ,iBAAyBL,IAAI,CAACM,KAAL,CAAW,MAAOT,CAAC,GAAG,CAAtB,CAAzB,oBAA4DG,IAAI,CAACM,KAAL,CAAW,MAAOR,CAAC,GAAG,EAAtB,CAA5D;;AACA,YAAIC,WAAJ,EAAiB;AACf;AACAP,UAAAA,GAAG,CAACe,MAAJ,CAAWL,OAAX,EAAoBC,OAApB;AACAX,UAAAA,GAAG,CAACgB,MAAJ,CAAWN,OAAO,GAAGR,QAArB,EAA+BS,OAAO,GAAGT,QAAzC;AACD,SAJD,MAIO;AACL;AACAF,UAAAA,GAAG,CAACe,MAAJ,CAAWL,OAAX,EAAoBC,OAApB;AACAX,UAAAA,GAAG,CAACgB,MAAJ,CAAWN,OAAO,GAAGR,QAArB,EAA+BS,OAAO,GAAGT,QAAzC;AACD;;AACDF,QAAAA,GAAG,CAACiB,MAAJ;AACD;AACF;AACF;;AAAA;;AAED,WAASE,oBAAT,CAA8BnB,GAA9B,EAAmCE,QAAnC,EAA6CN,CAA7C,EAAgDE,CAAhD,EAAmD;AACjDE,IAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBR,CAApB,EAAuBE,CAAvB;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKP,CAAC,GAAGI,QAA1B,EAAqCG,CAAC,EAAtC,EAA0C;AACxC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKV,CAAC,GAAGM,QAA1B,EAAqCI,CAAC,EAAtC,EAA0C;AACxC,YAAMc,QAAQ,GAAGZ,IAAI,CAACC,MAAL,MAAiB,EAAlC;AACA,YAAMC,OAAO,GAAGJ,CAAC,GAAGJ,QAApB;AACA,YAAMS,OAAO,GAAGN,CAAC,GAAGH,QAApB;AACAF,QAAAA,GAAG,CAACY,SAAJ;AACAZ,QAAAA,GAAG,CAACa,WAAJ,iBAAyBL,IAAI,CAACM,KAAL,CAAW,MAAO,CAACR,CAAC,GAAG,CAAL,IAAU,CAA5B,CAAzB,eAA6DE,IAAI,CAACM,KAAL,CAAW,MAAO,CAACT,CAAC,GAAG,CAAL,IAAU,CAA5B,CAA7D;;AACA,YAAIe,QAAJ,EAAc;AACZ;AACApB,UAAAA,GAAG,CAACe,MAAJ,CAAWL,OAAX,EAAoBC,OAApB;AACAX,UAAAA,GAAG,CAACgB,MAAJ,CAAWN,OAAX,EAAoBC,OAAO,GAAGT,QAA9B;AACD,SAJD,MAIO;AACL;AACAF,UAAAA,GAAG,CAACe,MAAJ,CAAWL,OAAX,EAAoBC,OAApB;AACAX,UAAAA,GAAG,CAACgB,MAAJ,CAAWN,OAAO,GAAGR,QAArB,EAA+BS,OAA/B;AACD;;AACDX,QAAAA,GAAG,CAACiB,MAAJ;AACD;AACF;AACF;;AAAA,GAlF0B,CAoF3B;;AACAC,EAAAA,wBAAwB,CAAClB,GAAD,EAAME,QAAN,EAAgBN,CAAhB,EAAmBE,CAAnB,CAAxB,CArF2B,CAuF3B;;AACA,WAASuB,UAAT,GAAsB;AACpB,QAAIvC,MAAM,KAAK,CAAf,EAAkB;AAChBoC,MAAAA,wBAAwB,CAAClB,GAAD,EAAME,QAAN,EAAgBN,CAAhB,EAAmBE,CAAnB,CAAxB,CADgB,CAEhB;AACD,KAHD,MAGO,IAAIhB,MAAM,KAAK,CAAf,EAAkB;AACvBqC,MAAAA,oBAAoB,CAACnB,GAAD,EAAME,QAAN,EAAgBN,CAAhB,EAAmBE,CAAnB,CAApB,CADuB,CAEvB;AACD,KAHM,MAGA,IAAIhB,MAAM,KAAK,CAAf,EAAkB;AACvBqB,MAAAA,iBAAiB,CAACH,GAAD,EAAME,QAAN,EAAgBN,CAAhB,EAAmBE,CAAnB,CAAjB;AACD;;AAED,QAAIwB,SAAS,GAAGb,MAAM,CAAC,CAAD,EAAG,CAAH,CAAtB;;AACA,WAAOa,SAAS,KAAKxC,MAArB,EAA6B;AAC3BwC,MAAAA,SAAS,GAAGb,MAAM,CAAC,CAAD,EAAG,CAAH,CAAlB;AACD;;AACD3B,IAAAA,MAAM,GAAGwC,SAAT;AACD;;AAAA,GAxG0B,CA0G3B;;AACAvC,EAAAA,CAAC,CAAC,SAAD,CAAD,CAAawC,EAAb,CAAgB,OAAhB,EAAyB,YAAU;AACjCF,IAAAA,UAAU;AACX,GAFD;AAIAtC,EAAAA,CAAC,CAACI,MAAD,CAAD,CAAUqC,MAAV,CAAiB,YAAW;AAC1BtC,IAAAA,WAAW,GAAGC,MAAM,CAACC,UAArB;AACAK,IAAAA,YAAY,GAAGF,SAAS,CAACE,YAAzB;AACAG,IAAAA,CAAC,GAAGF,MAAM,CAACG,KAAP,GAAeX,WAAnB;AACAY,IAAAA,CAAC,GAAGJ,MAAM,CAACK,MAAP,GAAgBN,YAApB;AACA0B,IAAAA,oBAAoB,CAACnB,GAAD,EAAME,QAAN,EAAgBN,CAAhB,EAAmBE,CAAnB,CAApB;AACAhB,IAAAA,MAAM,GAAG,CAAT;AACD,GAPD;AASD,CAxHD,GAwHI;;AAEJ,IAAM2B,MAAM,GAAG,SAATA,MAAS,CAASgB,GAAT,EAAaC,GAAb,EAAkB;AAC/B;AACA,SAAOlB,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,MAAL,MAAiBiB,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,CAHD","file":"canvas.340782d3.js","sourceRoot":"..","sourcesContent":["let nextUp = 2;\n\n$(document).ready(function() {\n\n  // canvas\n  let windowWidth = window.innerWidth;\n  let windowHeight = window.innerHeight;\n  const container = document.querySelector('.container');\n  let scrollHeight = container.scrollHeight;\n\n  const canvas = document.getElementById('myCanvas');\n  let w = canvas.width = windowWidth;\n  let h = canvas.height = scrollHeight;\n\n  const ctx = canvas.getContext('2d');\n  const tileSize = 30;\n\n  function generateDiagonals(ctx, tileSize, w, h) {\n    ctx.clearRect(0, 0, w, h);\n    for (let y = 0; y <= (h / tileSize); y++) {\n      for (let x = 0; x <= (w / tileSize); x++) {\n        const leftToRight = Math.random() >= .5;\n        const xOffset = x * tileSize;\n        const yOffset = y * tileSize;\n        ctx.beginPath();\n        ctx.strokeStyle = `rgb(${Math.floor(255 - ((y + 1) * 2))}, 100, ${Math.floor(255 - ((x + 1) * 15))})`;\n        if (leftToRight) {\n          // draw  left to right line = \\\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset + tileSize, yOffset + tileSize);\n        } else {\n          // draw  right to left line = /\n          ctx.moveTo(xOffset + tileSize, yOffset);\n          ctx.lineTo(xOffset, yOffset + tileSize);\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  function generateOverlapDiagonals(ctx, tileSize, w, h) {\n    ctx.clearRect(0, 0, w, h);\n    for (let y = 0; y <= (h / tileSize); y++) {\n      for (let x = 0; x <= (w / tileSize); x++) {\n        const leftToRight = Math.random() >= .5;\n        const xOffset = x * tileSize;\n        const yOffset = y * tileSize;\n        ctx.beginPath();\n        ctx.strokeStyle = `rgb(${Math.floor(255 - (y * 4))}, 150, ${Math.floor(255 - (x * 20))})`;\n        if (leftToRight) {\n          // draw  left to right line = \\\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset + tileSize, yOffset + tileSize);\n        } else {\n          // draw  right to left line = /\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset - tileSize, yOffset + tileSize);\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  function generateHorVertLines(ctx, tileSize, w, h) {\n    ctx.clearRect(0, 0, w, h);\n    for (let y = 0; y <= (h / tileSize); y++) {\n      for (let x = 0; x <= (w / tileSize); x++) {\n        const vertical = Math.random() >= .5;\n        const xOffset = x * tileSize;\n        const yOffset = y * tileSize;\n        ctx.beginPath();\n        ctx.strokeStyle = `rgb(${Math.floor(255 - ((x + 1) * 5))}, ${Math.floor(255 - ((y + 1) * 5))}, 0)`;\n        if (vertical) {\n          // draw vertical line = |\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset, yOffset + tileSize);\n        } else {\n          // draw horizontal line = --\n          ctx.moveTo(xOffset, yOffset);\n          ctx.lineTo(xOffset + tileSize, yOffset);\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  // generate pattern initially & on refresh\n  generateOverlapDiagonals(ctx, tileSize, w, h);\n\n  // define function for which pattern to draw next\n  function drawNextUp() {\n    if (nextUp === 1) {\n      generateOverlapDiagonals(ctx, tileSize, w, h);\n      // nextUp = 'b';\n    } else if (nextUp === 2) {\n      generateHorVertLines(ctx, tileSize, w, h);\n      // nextUp = 'c';\n    } else if (nextUp === 3) {\n      generateDiagonals(ctx, tileSize, w, h);\n    }\n\n    let maybeNext = random(1,3);\n    while (maybeNext === nextUp) {\n      maybeNext = random(1,3);\n    }\n    nextUp = maybeNext;\n  };\n\n  // do it againnnnnn on each click, alternating\n  $('body, a').on('click', function(){\n    drawNextUp();\n  });\n\n  $(window).resize(function() {\n    windowWidth = window.innerWidth;\n    scrollHeight = container.scrollHeight;\n    w = canvas.width = windowWidth;\n    h = canvas.height = scrollHeight;\n    generateHorVertLines(ctx, tileSize, w, h);\n    nextUp = 3;\n  });\n\n}); // end of doc ready\n\nconst random = function(min,max) {\n  // getting a random integer:\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n"]}